from emora_stdm import KnowledgeBase, DialogueFlow
from enum import Enum


class State(Enum):
    START = 0
    P1 = 1
    P2A = 2
    P2B = 3
    P2C = 4
    P3A = 5
    P3B = 6
   #not used P3C = 7
    P3D = 8
   #not used P3E = 9
    P3F = 10
    P3G = 11
    P3H = 12
    P3I = 13
    P3J = 14
    P3K = 15
    P3L = 16
    P4A = 17
    P4B = 18
    P4C = 19
    P4D = 20
    P4E = 21
    P4F = 22
    P4G = 23
    P4H = 24
    P4I = 25
    P4J = 26
    P4K = 27
    P4L = 28
    P4M = 29
    P4N = 30
    P4O = 31
    P4P = 32
    P4Q = 33
    P4R = 34
    P4S = 35
    P4T = 36
    P4U = 37
    P4V = 38
    P5A = 39
    P5B = 40
    P5C = 41
    P5D = 42
    P5E = 43
    P5F = 44
    P5G = 45
    P5H = 46
    P5J = 47
    P5K = 48
    P5L = 49
    P5M = 50
    P5N = 51
    P5O = 52
    P5P = 53
    P5Q = 54
    P6A = 55
    P6B = 56
    P6C = 57
    P6D = 58
    P6E = 59
    P6F = 60
    P6G = 61
    P6H = 62
    P6I = 63
    P6J = 64
    P6K = 65
    P6L = 66
    P7A = 67
    P7B = 68
    P7C = 69
    P7D = 70
    P7E = 71
    P7F = 72
    P7G = 73
    P7H = 74
    P7I = 75
    P7J = 76
    P7K = 77
    P7M = 78
    P7L = 79
    P8A = 80
    P8B = 81
    P8C = 82
    P8D = 83
    P8E = 84
    P9A = 85
    P9B = 86
    P9C = 87
    P10A = 88
    P10B = 89
    P11A = 90
    P11B = 91
    P11C = 92
    P12A = 93
    P12B = 94
    U1 = 95
    U2 = 96
    U3 = 97
    U4 = 98
    U5 = 99
    U6 = 100
    U7 = 101
    U8 = 102
    U9 = 103
    U10 = 104
    U11 = 105
    U12 = 106
    U13 = 107
    U14 = 108
    U15 = 109
    U16 = 110
    U17 = 111
    U18 = 112

    ERR = 113

#=============================================================================
#THIS SECTION IS THE BEGINNING AND FITNESS BRANCH
df = DialogueFlow(State.START, initial_speaker=DialogueFlow.Speaker.SYSTEM)

df.add_system_transition(State.START, State.P1, '"Do you have a phone?"')
df.add_user_transition(State.P1, State.U1, "$response={no}")
df.add_user_transition(State.P1, State.U2, "$response={yes}")
df.add_user_transition(State.P2B, State.U3, "$response={yes}")
df.add_user_transition(State.P2C, State.U2, "$response={yes}")
df.add_user_transition(State.P2C, State.U4, "$response={no}")
df.add_user_transition(State.P2A, State.U6, "$response={fitness}")
df.add_user_transition(State.P2A, State.U9, "$response={no}")
#I don't know how to use dictionary for below line so the line below is just a placeholder
#df.add_user_transition(State.P4E, State.U8, "$animal=#ONT(ontfitnessappnames)")
df.add_user_transition(State.P4E, State.U8, "$response={strava}")
df.add_user_transition(State.P2A, State.U13, "$response={yes}")
df.add_user_transition(State.P5C, State.U10, r"[$response=/(caloriecounter)|(pedometer)|(sleeptracker)/]")
df.add_user_transition(State.P6C, State.U11, "$response={yes}")
df.add_user_transition(State.P6C, State.U12, "$response={no}")
#below needs to use dictionary
df.add_user_transition(State.P7M, State.U8, "$response={strava}")

df.add_system_transition(State.U2, State.P2A, '"What type of mobile apps do you use?"')
df.add_system_transition(State.U1, State.P2C, '"Do you use a phone?"')
df.add_system_transition(State.U4, State.P3B, '"Oh, maybe you will in the future! Talk to you then."')
df.add_system_transition(State.ERR, State.P2A, '"I am personally a fan of Strava. Do you use any fitness apps?"')
df.set_error_successor(State.P2A, State.ERR)
df.add_system_transition(State.U6, State.P4E, '"Which fitness app specifically? I have been thinking about getting one."')
df.add_system_transition(State.U13, State.P4E, '"Which fitness app specifically? I have been thinking about getting one."')
df.add_system_transition(State.U9, State.P3B, '"Oh, maybe you will in the future! Talk to you then."')
df.add_system_transition(State.U8, State.P5C, '"What feature does" $response "have that you like most? Like, does it have calorie counting, sleep tracking, or a pedometer?"')
df.add_system_transition(State.U10, State.P6C, '"I have never used" $response "before, as I have heard that it can become obsessive. Has it helped you grow healthier?"')
df.add_system_transition(State.U11, State.P7L, '"Great! Thanks for suggesting it; I am going to go check it out now. Talk to you later!"')
df.add_system_transition(State.U12, State.P7M, '"Oh, bummer. What other fitness apps do you use?"')
#=====================================================================================================
#THIS SECTION IS DATING APPS
df.add_user_transition(State.P2A, State.U14, "$response={dating}")

df.add_system_transition(State.U14, State.P7A, '"Cool, which dating app do you use?"')


ont_dict = {
              "ontology": {
                #"ontfitnessappnames":
                #    [
                #        "ontstrava",
                #    ],
                "ontapptype":
                    [
                        "ontfitness",
                        "ontproductivity",
                        "ontsocialmedia",
                        "ontstorage",
                        "ontstreaming"
                    ],
                "ontyes":
                    [
                         "ontyeah",
                         "ontyes",
                         "ontyea",
                         "ontmmhmm",
                         "ontyuh"
                     ],
                "ontproductivity":
                    [
                      "ontstudytimer",
                      "onthealth",
                      "onteducation",
                      "ontnotes",
                      "onteducationalapps"
                    ],
                "ontnotes":
                    [
                      "ontgoodnotes",
                      "ontapplenotes",
                      "ontnotepad",
                      "ontonenote",
                      "ontother"
                    ],
                "onthealth":
                    [
                      "ontpedometer",
                      "ontstudytimer",
                      "ontcaloriecounter",
                      "ontsleeptracker",
                      "moodlog",
                      "ontother"
                    ],
                "onteducationalapps":
                    [
                      "ontcoursera",
                      "ontedx",
                      "ontduolingo"
                    ],
                "ontcoursera":
                    [
                     "ontmath",
                     "ontphysics",
                     "ontchemistry"
                    ],
                "ontduolingo":
                    [
                     "ontenglish",
                     "ontspanish",
                     "ontgerman",
                     "ontrussian",
                     "ontfrench",
                     "ontjapanese",
                     "ontitalian",
                     "ontmandarin",
                     "ontportuguese",
                     "ontarabic",
                     "ontturkish",
                     "ontdutch",
                     "ontswedish",
                     "ontenglish",
                     "onthindi",
                     "ontgreek",
                     "ontirish",
                     "ontpolish",
                     "onthighvalerian",
                     "hebrew"
                    ],
                "ontsocialmedia":
                    [
                      "ontsnapchat",
                      "ontinstagram",
                      "ontfacebook",
                      "onttwitter"
                    ],
                "ontinstagram":
                    [
                      2000
                    ],
                "ontsnapchat":
                    [
                      10
                    ],
                "ontstorage":
            [
                "ontdropbox",
                "ontemorybox",
                "onticloud"

            ],

                "ontfitness":
                    [
                        "ontsleeptracker",
                        "ontcaloriecounter",
                        "ontpedometer",
                        "ontmoodlog"
                    ]
              }
           }

df.run(debugging=False)
